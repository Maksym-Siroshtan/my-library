{"version":3,"file":"script.js","mappings":"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","sources":["webpack://library/./src/js/lib/components/accordion.js","webpack://library/./src/js/lib/components/carousel.js","webpack://library/./src/js/lib/components/dropdown.js","webpack://library/./src/js/lib/components/modal.js","webpack://library/./src/js/lib/components/tab.js","webpack://library/./src/js/lib/core.js","webpack://library/./src/js/lib/lib.js","webpack://library/./src/js/lib/modules/actions.js","webpack://library/./src/js/lib/modules/attributes.js","webpack://library/./src/js/lib/modules/classes.js","webpack://library/./src/js/lib/modules/display.js","webpack://library/./src/js/lib/modules/effects.js","webpack://library/./src/js/lib/modules/handlers.js","webpack://library/./src/js/lib/services/requests.js","webpack://library/webpack/bootstrap","webpack://library/webpack/runtime/define property getters","webpack://library/webpack/runtime/hasOwnProperty shorthand","webpack://library/webpack/runtime/make namespace object","webpack://library/./src/js/main.js"],"sourcesContent":["import $ from \"../core\"; // Импортируем главную функцию $ для возможности изменять её функционал\r\n\r\n$.prototype.accordion = function ( // Функция принимает 3 параметра, 2 класса активности и paddings(для корректной плавной анимации) \r\n  headActive = \"accordion-head--active\",\r\n  contentActive = \"accordion-content--active\",\r\n  paddings = 40\r\n) {\r\n  for (let i = 0; i < this.length; i++) {\r\n    $(this[i]).click(() => { // Кликаем на коллапс элемент(в данном случае элементы с классом accordion-head)\r\n      $(this[i]).toggleClass(headActive); // По клику на коллапс элемент тоглим его класс активности\r\n      $(this[i].nextElementSibling).toggleClass(contentActive); // По клику на коллапс элемент тоглим класс активности у следующего элемента\r\n\r\n      if ($(this[i]).containsClass(headActive)) { \r\n        // Если у коллапс элемента есть класс активности, то у идущего за ним(следующего) элемента зададим свойство max-height равное scrollHeight(та высота которую он должен занимать) + paddings(40, т.к. у блока который будет появляться верхний и нижний паддинги равны по 20px)\r\n        this[i].nextElementSibling.style.maxHeight = this[i].nextElementSibling.scrollHeight + paddings + 'px';\r\n      } else {\r\n        // Иначе, когда не будет активного класса, зададим свойство max-height = 0, так мы спрячем элемент\r\n        this[i].nextElementSibling.style.maxHeight = '0px';\r\n      }\r\n    });\r\n  }\r\n};\r\n\r\n$(\".accordion-head\").accordion(); // Инициализируем коллапс элементы, при клике на которые будем отслеживать события\r\n","import $ from \"../core\"; // Импортируем главную функцию $ для возможности изменять её функционал\r\n\r\n$.prototype.carousel = function () {\r\n  for (let i = 0; i < this.length; i++) {\r\n    const width = window.getComputedStyle(\r\n      this[i].querySelector(\".carousel-inner\")\r\n    ).width; // Получим ширину основного блока для того, чтобы установить равную ширину каждому слайду\r\n    const slides = this[i].querySelectorAll(\".carousel-item\"); // Получим все слайды\r\n    const slidesField = this[i].querySelector(\".carousel-slides\"); // Блок объединяющий в себе все имеющиеся слайды\r\n    const dots = this[i].querySelectorAll(\".carousel-indicators li\"); // Получим все dots(индикаторы)\r\n\r\n    slidesField.style.width = 100 * slides.length + \"%\"; // Установим элементу slidesField ширину в зависимости от количества item(каждый 100%). Делаем это для того чтобы все слайды поместились внутрь и занимали одно и тоже значение по ширине, в не зависимости от контента внутри\r\n    slides.forEach((slide) => (slide.style.width = width)); // Установим одинаковую ширину для каждого отдельного слайда\r\n\r\n    let offset = 0; // Переменная нужна для получения значения на которое будет смещён блок slidesField(с помощью transform)\r\n    let slideIndex = 0; // Переменная для отслеживания активного слайда изначально 0, потому что показывается первый слайд\r\n\r\n    $(this[i].querySelector('[data-slide=\"next\"]')).click((e) => {\r\n      // Получаем стрелку next и ловим на ней событие 'click'\r\n      e.preventDefault(); // Отменим стандартное поведение браузера, т.к. элемент у нас ссылка\r\n\r\n      if (offset == +width.replace(/\\D/g, \"\") * (slides.length - 1)) {\r\n        // (+width.replace(/\\D/g, '')) в переменной width(ширина каждого отдельного слайда) значение 900px, с помощью метода replace удалим все не числа(px)\r\n        // (slides.length - 1) количество элементов слайдера\r\n        // Если offset равен ширине всех слайдов, тоесть 3 слайда по 900 == 2700, значит достигли конца\r\n        offset = 0; // Если достигли возвращаемся в начало(нулевая позиция)\r\n      } else {\r\n        // Если ещё не конец, прибавляем по одному значению ширины(слайда) в переменную offset\r\n        offset += +width.replace(/\\D/g, \"\");\r\n      }\r\n\r\n      slidesField.style.transform = `translateX(-${offset}px)`; // При клике на > cдвигаем блок slidesField справа на лево по горизонтали на offset(-900px)\r\n\r\n      if (slideIndex == slides.length - 1) {\r\n        // Если дошли до последнего слайда, скидываем slideIndex в начало\r\n        slideIndex = 0;\r\n      } else {\r\n        // Инкрементим slideIndex пока не дошли до последнего слайда\r\n        slideIndex++;\r\n      }\r\n      dots.forEach((dot) => dot.classList.remove(\"active\")); // Переберём все индикаторы и уберём класс активности\r\n      dots[slideIndex].classList.add(\"active\"); // Добавим класс активности соответствующему slideIndex индикатору\r\n    });\r\n\r\n    $(this[i].querySelector('[data-slide=\"prev\"]')).click((e) => {\r\n      // Получаем стрелку prev и ловим на ней событие 'click'\r\n      e.preventDefault(); // Отменим стандартное поведение браузера, т.к. элемент у нас ссылка\r\n\r\n      if (offset == 0) {\r\n        // Если offset == 0(значит текущий слайд первый) то присваиваем ему ширину всех слайдов, тем самым перемещаем слайдер в конец\r\n        offset = +width.replace(/\\D/g, \"\") * (slides.length - 1);\r\n        // (+width.replace(/\\D/g, '')) в переменной width(ширина каждого отдельного слайда) значение 900px, с помощью метода replace удалим все не числа(px)\r\n        // (slides.length - 1) количество элементов слайдера\r\n      } else {\r\n        // Если ещё не начало(не 0), отнимаем по одному значению ширины(слайда) от переменной offset\r\n        offset -= +width.replace(/\\D/g, \"\");\r\n      }\r\n\r\n      slidesField.style.transform = `translateX(-${offset}px)`; // При клике на < cдвигаем блок slidesField слева на право по горизонтали на offset(-900px)\r\n\r\n      if (slideIndex == 0) {\r\n        // Если дошли до первого слайда, перемещаем слайдер в конец\r\n        slideIndex = slides.length - 1;\r\n      } else {\r\n        // Декриментим slideIndex пока не дошли до первого слайда\r\n        slideIndex--;\r\n      }\r\n      dots.forEach((dot) => dot.classList.remove(\"active\")); // Переберём все индикаторы и уберём класс активности\r\n      dots[slideIndex].classList.add(\"active\"); // Добавим класс активности соответствующему slideIndex индикатору\r\n    });\r\n\r\n    const sliderId = $(this[i]).getAttribute(\"id\"); // Получим id нужного нам слайдера\r\n    $(`#${sliderId} .carousel-indicators li`).click((e) => {\r\n      // Повесим события 'click' на все индикаторы\r\n      const slideTo = e.target.getAttribute('data-slide-to'); // Получим data-slide-to элемента на котором произошёл клик\r\n\r\n      slideIndex = slideTo; // Запишем новое полученное при клике значение в переменную slideIndex\r\n      offset = +width.replace(/\\D/g, \"\") * slideTo; // Когда мы хаотично меняем slideIndex у нас довольно сильно изменяется переменная offset. Поэтому возьмём ширину каждого отдельного слайда и умножим её на slideTo(в которой хранится число слайдов которое мы пролистали)\r\n\r\n      slidesField.style.transform = `translateX(-${offset}px)`; // При клике на индикатор cдвигаем блок slidesField по горизонтали на offset(-900px)\r\n      \r\n      dots.forEach((dot) => dot.classList.remove(\"active\")); // Переберём все индикаторы и уберём класс активности\r\n      dots[slideIndex].classList.add(\"active\"); // Добавим класс активности соответствующему slideIndex индикатору\r\n    });\r\n  }\r\n};\r\n\r\n$(\".carousel\").carousel(); // $('.carousel') === this[i]\r\n","import $ from \"../core\"; // Импортируем главную функцию $ для возможности изменять её функционал\r\n\r\n$.prototype.dropdown = function() {\r\n  for (let i = 0; i < this.length; i++) {\r\n    const id = $(this[i]).getAttribute('id'); // $(this[i]) - кнопка(триггер). Получили атрибут id=\"dropdownMenuButton\"\r\n    $(this[i]).click(() => { // Ловим клик на триггере\r\n      $(`[data-toggle-id=\"${id}\"]`).fadeToggle(300); // С помощью полученного id, находим элемент, который будем тоглить\r\n    });\r\n  }\r\n};\r\n\r\n$('.dropdown-toggle').dropdown(); // Получаем кнопку с помощью класса 'dropdown-toggle' и инициализируем на ней метод dpopdown()","import $ from \"../core\"; // Импортируем главную функцию $ для возможности изменять её функционал\r\n\r\n$.prototype.modal = function(created) {\r\n  function calcScroll() {\r\n    // Функция calcScroll() используется для измерения размера сколла в браузере\r\n    const div = document.createElement(\"div\");\r\n\r\n    div.style.width = \"50px\";\r\n    div.style.height = \"50px\";\r\n    div.style.overflowY = \"scroll\";\r\n    div.style.visibility = \"hidden\";\r\n\r\n    document.body.appendChild(div);\r\n\r\n    let scrollWidth = div.offsetWidth - div.clientWidth;\r\n    div.remove();\r\n\r\n    return scrollWidth;\r\n  }\r\n\r\n  const scroll = calcScroll();\r\n\r\n  for (let i = 0; i < this.length; i++) {\r\n    // Перебираем триггеры с data-toggle=\"modal\" и получаем атрибут 'data-target' элемента который сейчас перебирается\r\n    const target = $(this[i]).getAttribute('data-target');\r\n    $(this[i]).click((e) => {\r\n      e.preventDefault();\r\n      // При клике на триггер отменяем стандартное поведение, т.к. он может быть ссылкой и для полученного target применяем метод fadeIn()\r\n      $(target).fadeIn(500); // Показываем модальное окно через 0.5 сек.\r\n      document.body.style.overflow = 'hidden'; // Убираем вертикальный скролл\r\n      document.body.style.marginRight = `${scroll}px`; // Подставляем значение функции calcScroll() чтобы убрать дёрганье страницы\r\n    });\r\n\r\n    const closeElements = document.querySelectorAll(`${target} [data-close]`); // Получаем все элементы с 'data-close' в текущем target\r\n    closeElements.forEach(elem => {\r\n      $(elem).click((e) => {\r\n        e.preventDefault();\r\n        // При клике на триггер отменяем стандартное поведение, т.к. он может быть ссылкой и для полученного target применяем метод hide()\r\n        $(target).hide(); // Прячем модальное окно\r\n        document.body.style.overflow = ''; // Возвращаем вертикальный скролл\r\n        document.body.style.marginRight = `0px`; // Убираем значение функции calcScroll() чтобы убрать дёрганье страницы\r\n         if (created) {\r\n          // Если true, то модальное окно создано програмно, и для того чтобы не накладывалось одно окно на другое с одним и тем же id, будем удалять target\r\n          document.querySelector(target).remove();\r\n         }\r\n      });\r\n    });\r\n  \r\n    $(target).click((e) => {\r\n      // При клике на текущий target проверим, есть ли у объекта события класс 'modal', если да, закрываем его при клике на подложку\r\n      if (e.target.classList.contains('modal')) {\r\n        $(target).hide(); // Прячем модальное окно\r\n        document.body.style.overflow = ''; // Возвращаем вертикальный скролл\r\n        document.body.style.marginRight = `0px`; // Убираем значение функции calcScroll() чтобы убрать дёрганье страницы\r\n        if (created) {\r\n          // Если true, то модальное окно создано програмно, и для того чтобы не накладывалось одно окно на другое с одним и тем же id, будем удалять target\r\n          document.querySelector(target).remove();\r\n         }\r\n      }\r\n    });\r\n  }\r\n};\r\n\r\n$('[data-toggle=\"modal\"]').modal(); // Инициализируем триггеры по дата-атрибуту data-toggle=\"modal\"\r\n\r\n$.prototype.createModal = function({text, btns: {count, settings} = {}} = {}) {\r\n  // С помощью метода createModal создаём динамическое модальное окно. Метод принимает объект с настройками\r\n  for (let i = 0; i < this.length; i++) {\r\n    // Перебираем объект с триггерами и создаём блок обёртку 'modal' для нашего модального окна\r\n    let modal = document.createElement('div');\r\n    modal.classList.add('modal');\r\n    modal.setAttribute('id', $(this[i]).getAttribute('data-target').slice(1)); // Устанавливаем модальному окну атрибут 'data-target' полученный на триггере. С помощью slice(1) обрезаем #\r\n\r\n    //btns = {count:num, settings: [[text, classNames, close, cb]]}\r\n    const buttons = [];\r\n    for (let j = 0; j < count; j++) {\r\n      // Переданный в createModal() объект содержит свойство count, с помощью его при создании модального окна мы будем контролировать количество кнопок. Переменная j отвечает за номер кнопки\r\n      let btn = document.createElement('button'); // Например count: 3, создаст нам 3 кнопки \r\n      btn.textContent = settings[j][0]; // Из аргумента достанем текст кнопки и запишем его \r\n      btn.classList.add('btn', ...settings[j][1]); // Из аргумента достанем классы кнопки и запишем их\r\n      if (settings[j][2]) {\r\n        // Если атрибут close == true, значит кнопка будет закрывать модальное окно, поэтому добавим 'data-close'\r\n        btn.setAttribute('data-close', 'true');\r\n      }\r\n      if (settings[j][3] && typeof(settings[j][3]) === 'function') {\r\n        // Если cb передан и тип cb функция, тогда на текущую кнопку добавим обработчик клика с этой cb-функцией\r\n        btn.addEventListener('click', settings[j][3]);\r\n      }\r\n      buttons.push(btn); // Запушим каждую кнопку в массив buttons\r\n    }\r\n\r\n    // С помощью интерполяции в обёртку 'modal' добавим разметку нашего модального окна, и передадим текстовые значения title и body. Buttons не можем передать, т.к. это массив\r\n    modal.innerHTML = `\r\n    <div class=\"modal-dialog\" >\r\n      <div class=\"modal-content\">\r\n        <button class=\"close\" data-close>\r\n          <span>&times;</span>\r\n        </button>\r\n        <div class=\"modal-header\">\r\n          <h5 class=\"modal-title\">${text.title}</h5>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n          <p class=\"modal-text\">\r\n            ${text.body}\r\n          </p>\r\n        </div>\r\n        <div class=\"modal-footer\"></div>\r\n      </div>\r\n    </div>\r\n    `;\r\n    modal.querySelector('.modal-footer').append(...buttons); // В модальном окне получим div с классом 'modal-footer', с помощью spread оператора развернём кнопки и добавим с помощью метода append\r\n    document.body.appendChild(modal); // Поместим на страницу модальное окно\r\n    $(this[i]).modal(true); // Т.к. передан аргумент true, чтобы модальные окна не наслаивались будем их удалять\r\n    $(this[i].getAttribute('data-target')).fadeIn(500); // Получим модальное окно по 'data-target' и присеним метод fadeIn()\r\n  }\r\n};","import $ from \"../core\"; // Импортируем основную функцию для добавления методов в её prototype\r\n\r\n$.prototype.tab = function() {\r\n  // Перебираем объект с имеющимися в нём tab-item и по нажатию на определённый item добавляем ему и его контенту класс активности, а со всех остальных убираем активный класс\r\n  for (let i = 0; i < this.length; i++) {\r\n    $(this[i]).on('click', () => { // Клик на таб\r\n      $(this[i]) // Работаем с табом на котором произошло событие 'click'\r\n      .addClass('tab-item--active') // Добавим активный класс на текущий таб\r\n      .siblings() // Найдём всех соседей, кроме текущего таба\r\n      .removeClass('tab-item--active') // Удалим у соседей активный класс, оставим только на текущем\r\n      .closest('.tab') // Далее найдём ближайшего родителя по классу 'tab'\r\n      .find('.tab-content') // В найденном родителе с классом 'tab' найдём 'tab-content'\r\n      .removeClass('tab-content--active') // Удалим в найденных табах класс активности\r\n      .eq($(this[i]).index()) // Узнаем индекс именно того таба, который нужно показать в данный момент\r\n      .addClass('tab-content--active'); // Покажем нужный нам таб с помощью добавления класса активности\r\n    });\r\n  }\r\n};\r\n\r\n$('[data-tabpanel] .tab-item').tab(); // Инициализируем объект. По дата-атрибуту [data-tabpanel] найдём tab-item'ы с которыми далее будем работать","// ***Основная функция $ и основной метод функции init()***\r\n\r\n//JavaScript прототипно наследуемый язык и у каждой сущности есть свойство prototype, оно позволяет работать с прототипом объекта, т.к. любой тип данных всё-равно приходит к объекту.\r\n\r\nconst $ = function (selector) {\r\n  // ***Быстрый доступ к элементам с помощью $***\r\n  return new $.prototype.init(selector); // Возвращаем конструктор $.prototype.init(selector). При каждом использовании $(selector) будет создаваться новый объект. Также будет запускаться метод init(selector), который записан в prototype функции $\r\n};\r\n\r\n$.prototype.init = function (selector) {\r\n  // ***init(selector) будет использоваться для получения элементов с которыми мы будем работать***\r\n  if (!selector) {\r\n    return this; // Если не передан selector, возвращаем контекст вызова this. В данном случае это пустой {}, т.к. при вызове конструктора(new) мы ссылаемся на новосозданный объект\r\n  }\r\n\r\n  if (selector.tagName) {\r\n    // Если элемент является нодой(HTML element) а также он один, нам незачем перебирать его\r\n    this[0] = selector; // Запишем его в объект на первую позицию\r\n    this.length = 1; // Установим свойство length равное одному элементу\r\n    return this; // Останавливаем функцию, т.к. дальше идти нет смысла\r\n\r\n    // Пример объекта который мы получим\r\n    /*{           \r\n    0: node\r\n    length: 1\r\n  }*/\r\n  } // Если условие не выполняется движемся далее по коду\r\n\r\n  // Возвращаем элементы с которыми будем работать не в виде массива(псевдоколлекции), а в виде объекта. Это даст нам возможность    использовать методы которые есть у определённых объектов\r\n  Object.assign(this, document.querySelectorAll(selector)); // Берём this(главный объект) для того чтобы сохранить свойство prototype. В наш this - а это {} добавляем полученные элементы\r\n  this.length = document.querySelectorAll(selector).length; // В this(главный объект) добавляем свойство length которое в будущем будет использоваться\r\n  return this; // Возвращаем this(главный объект) в котором хранятся prototype и элементы с которыми мы будем взаимодействовать\r\n\r\n  // Пример объекта который мы получим\r\n  /*{           \r\n    0: node,\r\n    1: node,\r\n    2: node,\r\n    3: node,\r\n    4: node,\r\n    5: node и т.д...\r\n    length: 6\r\n  }*/\r\n};\r\n\r\n$.prototype.init.prototype = $.prototype; // Обращаемся к prototype функции $, в нём содержится метод init(), и у него тоже есть prototype который относится к возвращаемому из него объекту this. Главному объекту(this) возвращаемому из init() мы присваиваем прототип функции $. Это даёт нам главное преимущество, теперь на объекте, который будет создаваться при помощи функции $, мы можем использовать любые методы, которые будут внутри prototype этой функции\r\nwindow.$ = $; // Функцию $ записываем в глобальный объект window. Для возможности использовать её глобально\r\n\r\nexport default $; // Экспортируем функцию, т.к. библиотека будет собираться из разных кусочков и эта функция будет использоваться в отдельных файлах куда мы будем её импортировать\r\n","// Файл экспортов для объединения всего, где будем собирать библиотеку. Файл нужен для того чтобы обогатить функционал функции $ различными методами\r\nimport $ from \"./core\"; // Импортируем главную функцию $ для возможности изменять её функционал\r\n\r\n//Модули которые будут подвязаны к функции $ т.к. в её prototype будет записан различный функционал\r\nimport \"./modules/display\"; // Взаимодействие с css свойством display\r\nimport \"./modules/classes\"; // Взаимодействие с классами\r\nimport \"./modules/attributes\"; // Взаимодействие с атрибутами\r\nimport \"./modules/handlers\"; // Обработчики событий\r\nimport \"./modules/actions\"; // Методы для взаимодействия с элементами\r\nimport \"./modules/effects\"; // Взаимодействие с анимациями fadeIn, fadeOut\r\nimport \"./components/dropdown\"; // Dropdown\r\nimport \"./components/modal\"; // Динамическое и статическое создание модальных окон\r\nimport \"./components/tab\"; // Tabs\r\nimport \"./components/accordion\"; // Accordion - collapse\r\nimport \"./components/carousel\"; // Carousel - slider\r\nimport \"./services/requests\"; // Сервис запросов(GET, POST)\r\n\r\nexport default $; // Экспортируем уже модифицированную функцию $\r\n","import $ from \"../core\"; // Импортируем основную функцию для добавления методов в её prototype\r\n\r\n// Методы для взаимодействия с элементами\r\n$.prototype.html = function (content) {\r\n  // ***Устанавливаем или получаем текст в выбранную ноду***\r\n  for (let i = 0; i < this.length; i++) {\r\n    if (content) {\r\n      this[i].innerHTML = content; // В выбранный элемент устанавливаем текст переданный в аргумент метода\r\n    } else {\r\n      return this[i].innerHTML; // Если агрумент не задан, возвращаем текст\r\n    }\r\n  }\r\n  return this;\r\n};\r\n\r\n$.prototype.eq = function (i) {\r\n  // ***Находим элемент по указанному индексу***\r\n  const swap = this[i]; // Сохраняем индекс указанного элемента\r\n  const objLength = Object.keys(this).length; // Преобразуем в массив для получения длинны\r\n\r\n  for (let i = 0; i < objLength; i++) {\r\n    delete this[i]; // Очищаем свойства объекта\r\n  }\r\n\r\n  this[0] = swap; // На первую позицию в объект добавляем указанный элемент\r\n  this.length = 1; // Устанавливаем свойство length равное 1 элементу\r\n  return this;\r\n};\r\n\r\n$.prototype.index = function () {\r\n  // ***Находим индекс указанного элемента одного родителя***\r\n  const parent = this[0].parentNode; // Находим родителя нужного нам элемента\r\n  const childs = [...parent.children]; // Находим всех потомков родителя\r\n\r\n  const findMyIndex = (item) => {\r\n    return item === this[0]; // Если item равен нужному на элементу возвращаем его\r\n  };\r\n\r\n  return childs.findIndex(findMyIndex); // Метод findIndex() работает для каждого элемента массива потомков\r\n};\r\n\r\n$.prototype.find = function (selector) {\r\n  // ***Находим элементы по селектору внутри уже найденных элементов***\r\n  let numberOfItems = 0; // Будет записано общее кол-во элементов которые подошли по selector\r\n  let counter = 0; // Будет отвечать за количество новых записанных элементов в this\r\n\r\n  const copyObj = Object.assign({}, this); // Чтобы избавиться от багов создадим копию основного объекта\r\n\r\n  for (let i = 0; i < copyObj.length; i++) {\r\n    // Идём циклом ко скопированному объекту\r\n    const arr = copyObj[i].querySelectorAll(selector); // В каждом из скопированных элементов попробуем найти элементы подходящие по selector\r\n    if (arr.length === 0) {\r\n      continue; // Если ниодного элемента не найдено запустим continue\r\n    }\r\n    // Иначе идём далее\r\n    for (let j = 0; j < arr.length; j++) {\r\n      // Идём циклом по новому arr в который записаны элементы которые подошли по selector\r\n      this[counter] = arr[j]; // В this перезаписываем найденные новые элементы по номерам\r\n      counter++;\r\n    }\r\n    numberOfItems += arr.length; // Общее количество элементов которое было записано\r\n  }\r\n  this.length = numberOfItems; // Записываем длинну модифицированного объекта\r\n\r\n  // Для того чтобы удалить хвостик старых ненужных элементов\r\n  /*{\r\n    0: node, // новый элемент\r\n    1: node, // новый элемент\r\n    2: node, // новый элемент\r\n    3: node, // остаток старых ненужных элементов\r\n    4: node  // остаток старых ненужных элементов\r\n    length: 5\r\n  }*/\r\n\r\n  const objLength = Object.keys(this).length; // Преобразуем объект в массив для получения длинны\r\n  for (; numberOfItems < objLength; numberOfItems++) {\r\n    delete this[numberOfItems]; // Удалить отсаток ненужных элементов в объекте начиная от numberOfItems\r\n  }\r\n\r\n  /*{\r\n  0: node, // новый элемент\r\n  1: node, // новый элемент\r\n  2: node, // новый элемент\r\n  length: 3\r\n  }*/\r\n\r\n  return this;\r\n};\r\n\r\n$.prototype.closest = function (selector) {\r\n  // ***Возвращаем ближайший родительский элемент (или сам элемент), который соответствует selector или null если таковых элементов нет***\r\n  let counter = 0;\r\n\r\n  for (let i = 0; i < this.length; i++) {\r\n    if (!this[i].closest(selector)) {\r\n      // Если элементов соответствующих selector нет(null), вернём объект\r\n      return this;\r\n    }\r\n\r\n    this[i] = this[i].closest(selector); // В каждом элементе с помощью нативного closest() пытаемся найти данный selector, если находим записываем и инкрементим counter, чтобы знать сколько свойств записано\r\n    counter++;\r\n  }\r\n\r\n  const objLength = Object.keys(this).length; // Преобразуем объект в массив для получения длинны\r\n  for (; counter < objLength; counter++) {\r\n    delete this[counter]; // Удалить отсаток ненужных элементов в объекте начиная от counter\r\n  }\r\n  return this;\r\n};\r\n\r\n$.prototype.siblings = function () {\r\n  // ***Получить все соседние элементы не включая сам элемент***\r\n  let numberOfItems = 0; // Будет записано общее кол-во элементов\r\n  let counter = 0; // Будет отвечать за количество новых записанных элементов в this\r\n\r\n  const copyObj = Object.assign({}, this); // Чтобы избавиться от багов создадим копию основного объекта\r\n\r\n  for (let i = 0; i < copyObj.length; i++) {\r\n    // Идём циклом ко скопированному объекту\r\n    const arr = copyObj[i].parentNode.children; // В каждом из скопированных элементов получаем родителя и его детей\r\n    for (let j = 0; j < arr.length; j++) {\r\n      // Идём циклом по новому arr в который записаны элементы которые являются соседями\r\n      if (copyObj[i] === arr[j]) {\r\n        // Если элемент на котором произошло событие равен тому, который сейчас перебирается, исключаем его\r\n        continue; // Пропускаем элемент, исключаем его из выборки\r\n      }\r\n      this[counter] = arr[j]; // В this перезаписываем найденные новые элементы по номерам, кроме исключённого\r\n      counter++;\r\n    }\r\n    numberOfItems += arr.length - 1; // Общее количество элементов которое было записано, отнимаем(-1) т.к. исключили один элемент\r\n  }\r\n  this.length = numberOfItems; // Записываем длинну модифицированного объекта\r\n\r\n  // Для того чтобы удалить хвостик старых ненужных элементов\r\n  /*{\r\n    0: node, // новый элемент\r\n    1: node, // новый элемент\r\n    2: node, // новый элемент\r\n    3: node, // остаток старых ненужных элементов\r\n    4: node  // остаток старых ненужных элементов\r\n    length: 5\r\n  }*/\r\n\r\n  const objLength = Object.keys(this).length; // Преобразуем объект в массив для получения длинны\r\n  for (; numberOfItems < objLength; numberOfItems++) {\r\n    delete this[numberOfItems]; // Удалить отсаток ненужных элементов в объекте начиная от numberOfItems\r\n  }\r\n\r\n  /*{\r\n  0: node, // новый элемент\r\n  1: node, // новый элемент\r\n  2: node, // новый элемент\r\n  length: 3\r\n  }*/\r\n\r\n  return this;\r\n};\r\n","import $ from \"../core\"; // Импортируем основную функцию для добавления методов в её prototype\r\n\r\n// Взаимодействие с атрибутами\r\n$.prototype.setAttribute = function (attr, value) {\r\n  // Установить атрибут\r\n  if (!attr || !value) {\r\n    return this;\r\n  }\r\n\r\n  for (let i = 0; i < this.length; i++) {\r\n    this[i].setAttribute(attr, value);\r\n  }\r\n  return this; // Из метода возвращаем объект для возможности использовать цепочку вызовов(chaining)\r\n};\r\n\r\n$.prototype.getAttribute = function (attr) {\r\n  // Получить атрибут\r\n  for (let i = 0; i < this.length; i++) {\r\n    return this[i].getAttribute(attr);\r\n  }\r\n  return this;\r\n};\r\n","import $ from \"../core\"; // Импортируем основную функцию для добавления методов в её prototype\r\n\r\n// Взаимодействие с классами\r\n$.prototype.addClass = function (...classNames) {\r\n  // Добавляем классы\r\n  for (let i = 0; i < this.length; i++) {\r\n    if (!this[i].classList) {\r\n      // При отсутствии свойста classList у перебираемого элемента, пропускаем его\r\n      continue;\r\n    }\r\n\r\n    this[i].classList.add(...classNames);\r\n  }\r\n  return this; // Из метода возвращаем объект для возможности использовать цепочку вызовов(chaining)\r\n};\r\n\r\n$.prototype.removeClass = function (...classNames) {\r\n  // Удаляем классы\r\n  for (let i = 0; i < this.length; i++) {\r\n    if (!this[i].classList) {\r\n      continue;\r\n    }\r\n\r\n    this[i].classList.remove(...classNames);\r\n  }\r\n  return this;\r\n};\r\n\r\n$.prototype.toggleClass = function (className) {\r\n  // Тоглим класс\r\n  for (let i = 0; i < this.length; i++) {\r\n    if (!this[i].classList) {\r\n      continue;\r\n    }\r\n\r\n    this[i].classList.toggle(className);\r\n  }\r\n  return this;\r\n};\r\n\r\n$.prototype.containsClass = function (className) {\r\n  // Проверяем наличие класса\r\n  for (let i = 0; i < this.length; i++) {\r\n    if (!this[i].classList) {\r\n      continue;\r\n    }\r\n\r\n    return this[i].classList.contains(className);\r\n  }\r\n  return this;\r\n};\r\n","import $ from \"../core\"; // Импортируем основную функцию для добавления методов в её prototype\r\n\r\n// Взаимодействие с css свойством display\r\n$.prototype.hide = function () {\r\n  // Скрываем найденные элементы\r\n  for (let i = 0; i < this.length; i++) {\r\n    if (!this[i].style) {\r\n      // При отсутствии свойста style у перебираемого элемента, пропускаем его\r\n      continue;\r\n    }\r\n    this[i].style.display = \"none\";\r\n  }\r\n  return this; // Из метода возвращаем объект для возможности использовать цепочку вызовов(chaining)\r\n};\r\n\r\n$.prototype.show = function () {\r\n  // Показываем найденные элементы\r\n  for (let i = 0; i < this.length; i++) {\r\n    if (!this[i].style) {\r\n      continue;\r\n    }\r\n    this[i].style.display = \"\";\r\n  }\r\n  return this;\r\n};\r\n\r\n$.prototype.toggle = function () {\r\n  // Тоглим найденные элементы\r\n  for (let i = 0; i < this.length; i++) {\r\n    if (!this[i].style) {\r\n      continue;\r\n    }\r\n\r\n    if (this[i].style.display === \"none\") {\r\n      this[i].style.display = \"\";\r\n    } else {\r\n      this[i].style.display = \"none\";\r\n    }\r\n  }\r\n  return this;\r\n};\r\n","import $ from \"../core\"; // Импортируем основную функцию для добавления методов в её prototype\r\n\r\n// Взаимодействие с анимациями fadeIn, fadeOut\r\n$.prototype.animateOverTime = function (duration, callback, final) {\r\n  // ***Функция которая будет запускать анимации. Принимает duration - продолжительность, callback - функция которая будет выполняться после запуска анимации, final - функция которая выполнится после того как анимация отработала. Единственный обязательный параметр duration, остальные можно опустить***\r\n  let timeStart; // В начале undefined, нужна чтобы запустить анимацию\r\n\r\n  function _animateOverTime(time) {\r\n    // Техническая функция для requestAnimationFrame() которая каждый раз при запуске получает time\r\n    if (!timeStart) {\r\n      // Т.к timeStart == undefined, условие сработает\r\n      timeStart = time; // Начинаем анимацию, записываем полученный time в переменную timeStart\r\n    }\r\n\r\n    let timeElapsed = time - timeStart; // Отслеживаем прогресс анимации, каждый раз берём время time, которое нам приходит и отнимаем наше начальное время\r\n    let complection = Math.min(timeElapsed / duration, 1); // Переменная complection будет отвечать за изменение параметров на странице. timeElapsed / duration - вычисляем от 0.01 до 1 и далее..., но как только значение будет > \"1\" Math.min() вернёт второй аргумент \"1\", т.к. он будет минимальным. Это нужно для того чтобы не сломать css стили, т.к. свойство opacity в интервале от 0 до 1\r\n\r\n    callback(complection); // Теперь при каждом запуске анимации будем изменять значение свойства opacity в зависимости от complection\r\n\r\n    if (timeElapsed < duration) {\r\n      // Пока прогресс времени будет меньше продолжительности запускаем анимацию\r\n      requestAnimationFrame(_animateOverTime);\r\n    } else {\r\n      if (typeof final === \"function\") {\r\n        // Иначе, если анимация закончилась, а также передана функция final(), запустим её\r\n        final();\r\n      }\r\n    }\r\n  }\r\n  return _animateOverTime; // Для того чтобы использовать функцию в других методах, возвращаем её\r\n};\r\n\r\n$.prototype.fadeIn = function (duration, display, final) {\r\n  // ***Показывает на странице элементы через анимацию fadeIn***\r\n  for (let i = 0; i < this.length; i++) {\r\n    this[i].style.display = display || \"block\"; // Установим элементам display: 'block', т.к. если будет \"none\", мы не увидим opacity\r\n\r\n    const _fadeIn = (complection) => {\r\n      // Напишем техническую функцию которая принимает изменяемый параметр complection для запуска анимации. Она будет изменять opacity от 0 до 1. Пишем функцию в виде => для сохранения контекста вызова(this)\r\n      this[i].style.opacity = complection;\r\n    };\r\n\r\n    const ani = this.animateOverTime(duration, _fadeIn, final); // Теперь из prototype нашего объекта можем вытащить метод animateOverTime в который необходимо передать 3 аргумента duration - продолжительность, которую мы установим при вызове метода fadeIn, callback - функция которая будет выполняться после запуска анимации, final - (необязательный) аргумент - функция которая выполнится после того как анимация отработала.\r\n    requestAnimationFrame(ani); // Воспроизвести анимацию\r\n  }\r\n  return this;\r\n};\r\n\r\n$.prototype.fadeOut = function (duration, final) {\r\n  // ***Скрывает элементы на странице через анимацию fadeOut***\r\n  for (let i = 0; i < this.length; i++) {\r\n    const _fadeOut = (complection) => {\r\n      // Напишем техническую функцию которая принимает изменяемый параметр complection для запуска анимации. Она будет изменять opacity от 1 до 0. Пишем функцию в виде => для сохранения контекста вызова(this)\r\n      this[i].style.opacity = 1 - complection; // С каждым запуском элемент будет становиться более прозрачным, т.к. complection будет увеличиваться\r\n      if (complection === 1) {\r\n        // Если true, нам далее нет смысла уменьшать прозрачность, т.к. достигли предела\r\n        this[i].style.display = \"none\"; // Установим элементам display: 'none'\r\n      }\r\n    };\r\n\r\n    const ani = this.animateOverTime(duration, _fadeOut, final); // Теперь из prototype нашего объекта можем вытащить метод animateOverTime в который необходимо передать 3 аргумента duration - продолжительность, которую мы установим при вызове метода fadeOut, callback - функция которая будет выполняться после запуска анимации, final - (необязательный) аргумент - функция которая выполнится после того как анимация отработала.\r\n    requestAnimationFrame(ani); // Воспроизвести анимацию\r\n  }\r\n  return this;\r\n};\r\n\r\n$.prototype.fadeToggle = function (duration, display, final) {\r\n  // ***Тоглим элементы на странице через анимацию fadeToggle***\r\n  for (let i = 0; i < this.length; i++) {\r\n    if (window.getComputedStyle(this[i]).display === 'none') { \r\n      // Если display: 'none', задаём 'block' и запускаем _fadeIn(показываем)\r\n      this[i].style.display = display || \"block\";\r\n\r\n      const _fadeIn = (complection) => {\r\n        this[i].style.opacity = complection;\r\n      };\r\n  \r\n      const ani = this.animateOverTime(duration, _fadeIn, final);\r\n      requestAnimationFrame(ani);\r\n    } else {\r\n      // Иначе, если display: 'block', запускаем _fadeOut(скрываем) и задаём 'none'\r\n      const _fadeOut = (complection) => {\r\n        this[i].style.opacity = 1 - complection;\r\n        if (complection === 1) {\r\n          this[i].style.display = \"none\";\r\n        }\r\n      };\r\n  \r\n      const ani = this.animateOverTime(duration, _fadeOut, final);\r\n      requestAnimationFrame(ani);\r\n    }\r\n  }\r\n  return this;\r\n};\r\n","import $ from \"../core\"; // Импортируем основную функцию для добавления методов в её prototype\r\n\r\n// Обработчики событий\r\n$.prototype.on = function (eventName, callback) {\r\n  // Включить обработчик(имя события, функция которая должна выполниться)\r\n  if (!eventName || !callback) {\r\n    return this;\r\n  }\r\n\r\n  for (let i = 0; i < this.length; i++) {\r\n    this[i].addEventListener(eventName, callback);\r\n  }\r\n  return this; // Из метода возвращаем объект для возможности использовать цепочку вызовов(chaining)\r\n};\r\n\r\n$.prototype.off = function (eventName, callback) {\r\n  // Выключить обработчик(имя события, функция которая должна выполниться)\r\n  if (!eventName || !callback) {\r\n    return this;\r\n  }\r\n\r\n  for (let i = 0; i < this.length; i++) {\r\n    this[i].removeEventListener(eventName, callback);\r\n  }\r\n  return this;\r\n};\r\n\r\n$.prototype.click = function (handler) {\r\n  // Обработать событие клика(функция которая выполниться)\r\n  for (let i = 0; i < this.length; i++) {\r\n    if (handler) {\r\n      this[i].addEventListener(\"click\", handler);\r\n    } else {\r\n      this[i].click(); // Если не передан handler, сработает виртуальный клик\r\n    }\r\n  }\r\n  return this;\r\n};\r\n","import $ from \"../core\"; // Импортируем главную функцию $ для возможности изменять её функционал\r\n\r\n$.prototype.get = async function(url, dataTypeAnswers = 'json') {\r\n  let res = await fetch(url);\r\n  \r\n  if (!res.ok) {\r\n    throw new Error(`Could not fetch ${url} Status: ${res.status}`);\r\n  }\r\n\r\n  switch(dataTypeAnswers) {\r\n    case 'json' :\r\n      return await res.json();\r\n    case 'text' :\r\n      return await res.text();\r\n    case 'blob' :\r\n      return await res.blob();\r\n  }\r\n};\r\n\r\n$.prototype.post = async function(url, data, dataTypeAnswers = 'text') {\r\n  let res = await fetch(url, {\r\n    method: 'POST',\r\n    body: data\r\n  });\r\n\r\n  switch(dataTypeAnswers) {\r\n    case 'json' :\r\n      return await res.json();\r\n    case 'text' :\r\n      return await res.text();\r\n    case 'blob' :\r\n      return await res.blob();\r\n  }\r\n};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import $ from \"./lib/lib\"; // Импортируем основную функцию для использования её функционала\r\n"],"names":["$","prototype","accordion","headActive","arguments","length","undefined","contentActive","paddings","i","click","toggleClass","nextElementSibling","containsClass","style","maxHeight","scrollHeight","carousel","width","window","getComputedStyle","querySelector","slides","querySelectorAll","slidesField","dots","forEach","slide","offset","slideIndex","e","preventDefault","replace","transform","dot","classList","remove","add","sliderId","getAttribute","slideTo","target","dropdown","id","fadeToggle","modal","created","calcScroll","div","document","createElement","height","overflowY","visibility","body","appendChild","scrollWidth","offsetWidth","clientWidth","scroll","fadeIn","overflow","marginRight","closeElements","elem","hide","contains","createModal","text","btns","count","settings","setAttribute","slice","buttons","j","btn","textContent","addEventListener","push","innerHTML","title","append","tab","on","addClass","siblings","removeClass","closest","find","eq","index","selector","init","tagName","Object","assign","html","content","swap","objLength","keys","parent","parentNode","childs","children","findMyIndex","item","findIndex","numberOfItems","counter","copyObj","arr","attr","value","className","toggle","display","show","animateOverTime","duration","callback","final","timeStart","_animateOverTime","time","timeElapsed","complection","Math","min","requestAnimationFrame","_fadeIn","opacity","ani","fadeOut","_fadeOut","eventName","off","removeEventListener","handler","get","url","dataTypeAnswers","res","fetch","ok","Error","status","json","blob","post","data","method"],"sourceRoot":""}